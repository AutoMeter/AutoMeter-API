{"version":3,"sources":["webpack:///src/views/executecenter/executeplan/index.vue","webpack:///./src/views/executecenter/executeplan/index.vue?35ae","webpack:///./src/views/executecenter/executeplan/index.vue","webpack:///./src/api/assets/globalheaderuse.js"],"names":["executecenter_executeplan","filters","statusFilter","status","published","draft","deleted","data","datevisible","timevisible","itemplanKey","itemcaseKey","planbusinessdiclist","tmpexecuteplanname","tmpcasedeployunitname","tmpcaseapiname","tmpcaseexecuteplanid","tmpcasecasetype","show","PerformanceVisible","enviromentnameList","apiList","deployunitList","multipleSelection","casemultipleSelection","globalheaderallList","executeplanList","testcaseList","testcaselastList","executeplancaseList","executeplancaseexistList","executeplancaseremovetList","executeplanstopList","tmpplanbatchList","paramsList","listLoading","caselistLoading","total","casetotal","apiQuery","page","size","deployunitname","listQuery","executeplanname","caselistQuery","apiname","executeplanid","casetype","dialogStatus","dialogFormVisible","casedialogFormVisible","batchdialogFormVisible","CollectionParamsFormVisible","modifyparamdialogFormVisible","loadcase","loadbatch","textMap","updateRole","update","add","paramstextMap","diclevelQuery","diccode","btnLoading","casebtnLoading","execbtnLoading","tmpexecuteplan","id","enviromentname","envid","usetype","businesstype","ip","memo","creator","dingdingtoken","runmode","tmpplanbatch","batchname","exectype","exectmpdate","execdate","exectime","tmpplanenv","tmpapicases","casename","casejmxname","casecontent","expect","level","tmpparam","paramstype","keyname","keyvalue","globalheadername","globalheaderid","tmpep","search","searchcase","searchparam","computed","extends_default","Object","vuex_esm","created","this","getexecuteplanList","getapiList","getdepunitList","getenviromentallList","getdatabydiccodeList","getglobalheaderallList","methods","_this","dictionary","then","response","list","catch","res","$message","error","unix2CurrentTime","utils","_this2","globalheader","searchheaderbyepid","_this3","console","log","globalheaderuse","stopexecuteplanList","_this4","i","length","splice","_i","push","executeplan","success","savebatchandexecuteplancase","_this5","$refs","validate","valid","executeplanbatch","executeplancase","_this6","_i2","planid","handleClickTableRow","row","event","column","handleSelectionChange","rows","casehandleClickTableRow","casehandleSelectionChange","exectypeselectChanged","e","paramstypeselectChanged","_this7","execplanname","tmpexecplanname","tmpbatchname","searchBy","_this8","itemKey","Math","random","handleSizeChange","handleCurrentChange","getIndex","index","paramgetIndex","enviromentselectChanged","selectChanged","_this9","api","_this10","_this11","testenviroment","_this12","depunit","getcaseList","_this13","apicases","apicasesList","searchcaseBy","searchtestplanexistcase","gettestcaselastList","_this14","asyncToGenerator_default","regenerator_default","a","mark","_callee","j","wrap","_context","prev","next","testcaseid","checkstats","stop","searchcaseBydepandapi","_this15","_callee2","_context2","_this16","executeplantestcase","$nextTick","caseTable","toggleRowSelection","casehandleSizeChange","casehandleCurrentChange","casegetIndex","showAddexecuteplanDialog","name","showplanparamsDialog","showAddapiparamsDialog","ParamsdialogStatus","showUpdateparamsDialog","showplanbatchDialog","_this17","addexecuteplan","_this18","addparams","_this19","updatparam","_this20","removeexecuteplanparam","_this21","$confirm","confirmButtonText","cancelButtonText","type","info","showUpdateexecuteplanDialog","addexecuteplantestcase","_this22","deployunitid","apiid","removeexecuteplantestcase","_this23","findflag","showTestCaseDialog","updateexecuteplan","_this24","removeexecuteplan","_this25","isUniqueDetail","notexistheaderselectChanged","views_executecenter_executeplan","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","inline","hasPermission","icon","nativeOn","click","$event","preventDefault","_v","_e","placeholder","keyup","indexOf","_k","keyCode","key","model","value","callback","$$v","$set","expression","label","_l","businessdicitem","dicitmevalue","loading","on","directives","rawName","modifiers","body","ref","element-loading-text","border","fit","highlight-current-row","row-click","selection-change","width","align","scopedSlots","_u","fn","scope","domProps","textContent","_s","$index","prop","show-overflow-tooltip","createTime","lastmodifyTime","current-page","page-size","page-sizes","layout","size-change","current-change","title","visible","update:visible","staticStyle","margin-left","status-icon","label-position","label-width","required","maxlength","prefix-icon","auto-complete","trim","change","display","envname","businesstypeselectChanged","dicitem","slot","depname","format","value-format","picker-options","start","step","end","staticRenderFns","Component","__webpack_require__","normalizeComponent","__webpack_exports__","params","__WEBPACK_IMPORTED_MODULE_0__utils_request__","url","method","apicasesdebugForm","apicasesdebugId"],"mappings":"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","file":"static/js/27.7a26b807e9f540a68ea2.js","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-form :inline=\"true\">\n        <el-form-item>\n          <el-button\n            type=\"success\"\n            size=\"mini\"\n            icon=\"el-icon-refresh\"\n            v-if=\"hasPermission('executeplan:list')\"\n            @click.native.prevent=\"getexecuteplanList\"\n          >刷新</el-button>\n          <el-button\n            type=\"success\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:list')\"\n            @click.native.prevent=\"showplanbatchDialog\"\n          >运行</el-button>\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            icon=\"el-icon-plus\"\n            v-if=\"hasPermission('executeplan:add')\"\n            @click.native.prevent=\"showAddexecuteplanDialog\"\n          >添加测试集合</el-button>\n        </el-form-item>\n\n        <span v-if=\"hasPermission('executeplan:search')\">\n          <el-form-item>\n            <el-input v-model=\"search.executeplanname\" @keyup.enter.native=\"searchBy\" placeholder=\"测试集合\"></el-input>\n          </el-form-item>\n\n          <el-form-item>\n            <el-select v-model=\"search.businesstype\" placeholder=\"业务类型\">\n              <el-option label=\"请选择\" value />\n              <div v-for=\"(businessdicitem, index) in planbusinessdiclist\" :key=\"index\">\n                <el-option :label=\"businessdicitem.dicitmevalue\" :value=\"businessdicitem.dicitmevalue\"/>\n              </div>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"searchBy\" :loading=\"btnLoading\">查询</el-button>\n          </el-form-item>\n        </span>\n      </el-form>\n    </div>\n    <el-table\n      ref=\"fileTable\"\n      :data=\"executeplanList\"\n      :key=\"itemplanKey\"\n      @row-click=\"handleClickTableRow\"\n      @selection-change=\"handleSelectionChange\"\n      v-loading.body=\"listLoading\"\n      element-loading-text=\"loading\"\n      border\n      fit\n      highlight-current-row\n    >\n      <el-table-column\n        type=\"selection\"\n        width=\"40\">\n      </el-table-column>\n      <el-table-column label=\"编号\" align=\"center\" width=\"50\">\n        <template slot-scope=\"scope\">\n          <span v-text=\"getIndex(scope.$index)\"></span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"集合名\" align=\"center\" prop=\"executeplanname\" width=\"160\"/>\n      <el-table-column label=\"envid\" align=\"center\" v-if=\"show\" prop=\"envid\" width=\"50\"/>\n      <el-table-column label=\"状态\" align=\"center\" prop=\"status\" v-if=\"show\" width=\"50\"/>\n      <el-table-column label=\"业务类型\" align=\"center\" prop=\"businesstype\" width=\"100\"/>\n      <el-table-column label=\"执行环境\" align=\"center\" prop=\"enviromentname\" width=\"100\"/>\n      <el-table-column label=\"类型\" align=\"center\" prop=\"usetype\" width=\"50\"/>\n      <el-table-column label=\"运行模式\" align=\"center\" prop=\"runmode\" width=\"70\"/>\n      <el-table-column :show-overflow-tooltip=\"true\" label=\"通知钉钉\" align=\"center\" prop=\"dingdingtoken\" width=\"90\"/>\n      <el-table-column label=\"操作人\" align=\"center\" prop=\"creator\" width=\"60\"/>\n      <el-table-column label=\"描述\" align=\"center\" prop=\"memo\" width=\"100\"/>\n      <el-table-column label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"130\">\n        <template slot-scope=\"scope\">{{ unix2CurrentTime(scope.row.createTime) }}</template>\n      </el-table-column>\n      <el-table-column label=\"最后修改时间\" align=\"center\" prop=\"lastmodifyTime\" width=\"130\">\n        <template slot-scope=\"scope\">{{ unix2CurrentTime(scope.row.lastmodifyTime) }}\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"管理\" align=\"center\"\n                       v-if=\"hasPermission('executeplan:update')  || hasPermission('executeplan:delete')\">\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showUpdateexecuteplanDialog(scope.$index)\"\n          >修改</el-button>\n          <el-button\n            type=\"danger\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:delete') && scope.row.id !== id\"\n            @click.native.prevent=\"removeexecuteplan(scope.$index)\"\n          >删除</el-button>\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showplanparamsDialog(scope.$index)\"\n          >全局Header</el-button>\n\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"search.page\"\n      :page-size=\"search.size\"\n      :total=\"total\"\n      :page-sizes=\"[10, 20, 30, 40]\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n    ></el-pagination>\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form\n        status-icon\n        class=\"small-space\"\n        label-position=\"left\"\n        label-width=\"120px\"\n        style=\"width: 400px; margin-left:50px;\"\n        :model=\"tmpexecuteplan\"\n        ref=\"tmpexecuteplan\"\n      >\n        <el-form-item label=\"集合名\" prop=\"executeplanname\" required>\n          <el-input\n            type=\"text\"\n            maxlength=\"50\"\n            prefix-icon=\"el-icon-edit\"\n            auto-complete=\"off\"\n            v-model.trim=\"tmpexecuteplan.executeplanname\"\n          />\n        </el-form-item>\n        <el-form-item label=\"类型\" prop=\"usetype\" required>\n          <el-select v-model=\"tmpexecuteplan.usetype\" placeholder=\"类型\" style=\"width:100%\">\n            <el-option label=\"功能\" value=\"功能\" />\n            <el-option label=\"性能\" value=\"性能\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"执行环境\" prop=\"enviromentname\"  required>\n          <el-select v-model=\"tmpexecuteplan.enviromentname\" placeholder=\"执行环境\" style=\"width:100%\" @change=\"enviromentselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(envname, index) in enviromentnameList\" :key=\"index\">\n              <el-option :label=\"envname.enviromentname\" :value=\"envname.enviromentname\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"业务类型\" prop=\"businesstype\"  required>\n          <el-select v-model=\"tmpexecuteplan.businesstype\" placeholder=\"业务类型\" style=\"width:100%\" @change=\"businesstypeselectChanged($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(dicitem, index) in planbusinessdiclist\" :key=\"index\">\n              <el-option :label=\"dicitem.dicitmevalue\" :value=\"dicitem.dicitmevalue\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n          <el-form-item label=\"运行模式\" prop=\"runmode\" required>\n            <el-select v-model=\"tmpexecuteplan.runmode\" placeholder=\"运行模式\" style=\"width:100%\">\n              <el-option label=\"单机运行\" value=\"单机运行\" />\n              <el-option label=\"多机并行\" value=\"多机并行\" />\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"钉钉通知token\" prop=\"dingdingtoken\">\n            <el-input\n              maxlength=\"200\"\n              type=\"text\"\n              prefix-icon=\"el-icon-message\"\n              auto-complete=\"off\"\n              v-model=\"tmpexecuteplan.dingdingtoken\"\n            />\n          </el-form-item>\n\n        <el-form-item label=\"备注\" prop=\"memo\">\n          <el-input\n            maxlength=\"200\"\n            type=\"text\"\n            prefix-icon=\"el-icon-message\"\n            auto-complete=\"off\"\n            v-model=\"tmpexecuteplan.memo\"\n          />\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"dialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"dialogStatus === 'add'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addexecuteplan\"\n        >保存\n        </el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"dialogStatus === 'update'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"updateexecuteplan\"\n        >修改</el-button>\n      </div>\n    </el-dialog>\n    <el-dialog :title=\"loadcase\" :visible.sync=\"casedialogFormVisible\">\n      <div class=\"filter-container\" >\n        <el-form :inline=\"true\" :model=\"searchcase\" ref=\"searchcase\" >\n          <span v-if=\"hasPermission('apicases:search')\">\n          <el-form-item label=\"发布单元:\" prop=\"deployunitname\" required>\n            <el-select v-model=\"searchcase.deployunitname\" placeholder=\"发布单元\" @change=\"selectChanged($event)\">\n              <el-option label=\"请选择\" value />\n              <div v-for=\"(depname, index) in deployunitList\" :key=\"index\">\n                <el-option :label=\"depname.deployunitname\" :value=\"depname.deployunitname\" required/>\n              </div>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"API:\">\n            <el-select v-model=\"searchcase.apiname\" placeholder=\"api名\">\n              <el-option label=\"请选择\" value />\n              <div v-for=\"(api, index) in apiList\" :key=\"index\">\n                <el-option :label=\"api.apiname\" :value=\"api.apiname\"/>\n              </div>\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"searchcaseBy\" :loading=\"btnLoading\">查询</el-button>\n          </el-form-item>\n        </span>\n        </el-form>\n      </div>\n      <el-table\n        ref=\"caseTable\"\n        :data=\"testcaselastList\"\n        :key=\"itemcaseKey\"\n        @row-click=\"casehandleClickTableRow\"\n        @selection-change=\"casehandleSelectionChange\"\n        v-loading.body=\"listLoading\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"60\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"getIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n\n        <el-table-column type=\"selection\" prop=\"status\" width=\"50\"/>\n        <el-table-column label=\"apiid\" v-if=\"show\" align=\"center\" prop=\"apiid\" width=\"120\"/>\n        <el-table-column label=\"deployunitid\" v-if=\"show\" align=\"center\" prop=\"deployunitid\" width=\"120\"/>\n        <el-table-column label=\"用例名\" align=\"center\" prop=\"casename\" width=\"120\"/>\n        <el-table-column label=\"发布单元\" align=\"center\" prop=\"deployunitname\" width=\"120\"/>\n        <el-table-column label=\"API\" align=\"center\" prop=\"apiname\" width=\"120\"/>\n        <el-table-column label=\"期望值\" align=\"center\" prop=\"expect\" width=\"120\"/>\n      </el-table>\n      <el-pagination\n        @size-change=\"casehandleSizeChange\"\n        @current-change=\"casehandleCurrentChange\"\n        :current-page=\"searchcase.page\"\n        :page-size=\"searchcase.size\"\n        :total=\"casetotal\"\n        :page-sizes=\"[10, 20, 30, 40]\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n      ></el-pagination>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"casedialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addexecuteplantestcase\"\n        >装载</el-button>\n        <el-button\n          type=\"warning\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"removeexecuteplantestcase\"\n        >取消装载</el-button>\n      </div>\n    </el-dialog>\n    <el-dialog :title=\"loadbatch\" :visible.sync=\"batchdialogFormVisible\">\n      <div class=\"filter-container\" >\n        <el-form  :model=\"tmpplanbatch\" ref=\"tmpplanbatch\" >\n          <el-form-item label=\"执行计划：\"  prop=\"batchname\" required>\n            <el-input\n              type=\"text\"\n              maxlength=\"50\"\n              style=\"width:60%\"\n              placeholder=\"例如2020-10-21-tag-101\"\n              prefix-icon=\"el-icon-edit\"\n              auto-complete=\"off\"\n              v-model.trim=\"tmpplanbatch.batchname\"\n            />\n          </el-form-item>\n          <el-form-item label=\"执行类型：\" prop=\"exectype\" required >\n            <el-select v-model=\"tmpplanbatch.exectype\" placeholder=\"执行类型\" style=\"width:60%\" @change=\"exectypeselectChanged($event)\">\n              <el-option label=\"立即执行\" value=\"立即执行\"></el-option>\n              <el-option label=\"某天定时\" value=\"某天定时\"></el-option>\n              <el-option label=\"每天定时\" value=\"每天定时\"></el-option>\n            </el-select>\n          </el-form-item>\n          <div v-if=\"datevisible\">\n            <el-form-item label=\"选择日期：\" prop=\"exectmpdate\" required >\n              <el-date-picker style=\"width:60%\"\n                              v-model=\"tmpplanbatch.exectmpdate\"\n                              type=\"date\"\n                              format=\"yyyy-MM-dd\"\n                              value-format=\"yyyy-MM-dd\"\n                              placeholder=\"选择日期\">\n              </el-date-picker>\n            </el-form-item>\n          </div>\n          <div v-if=\"timevisible\">\n            <el-form-item label=\"选择时刻：\" prop=\"exectime\" required >\n              <el-time-select style=\"width:60%\"\n                              v-model=\"tmpplanbatch.exectime\"\n                              :picker-options=\"{\n              start: '00:05',\n              step: '00:10',\n              end: '23:55'\n            }\"\n                              placeholder=\"选择时间\">\n              </el-time-select>\n            </el-form-item>\n          </div>\n        </el-form>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"batchdialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          :loading=\"execbtnLoading\"\n          @click.native.prevent=\"savebatchandexecuteplancase\"\n        >执行</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"全局Header\" :visible.sync=\"CollectionParamsFormVisible\">\n      <div class=\"filter-container\">\n        <el-form :inline=\"true\">\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              size=\"mini\"\n              icon=\"el-icon-plus\"\n              v-if=\"hasPermission('executeplan:add')\"\n              @click.native.prevent=\"showAddapiparamsDialog\"\n            >添加全局Header</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <el-table\n        :data=\"paramsList\"\n        :key=\"itemKey\"\n        v-loading.body=\"listLoading\"\n        element-loading-text=\"loading\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column label=\"编号\" align=\"center\" width=\"45\">\n          <template slot-scope=\"scope\">\n            <span v-text=\"paramgetIndex(scope.$index)\"></span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Header\" align=\"center\" prop=\"globalheadername\" width=\"280\"/>\n        <el-table-column label=\"管理\" align=\"center\"\n                         v-if=\"hasPermission('executeplan:update')  || hasPermission('executeplan:delete')\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"warning\"\n              size=\"mini\"\n              v-if=\"hasPermission('executeplan:update') && scope.row.id !== id\"\n              @click.native.prevent=\"showUpdateparamsDialog(scope.$index)\"\n            >修改</el-button>\n            <el-button\n              type=\"danger\"\n              size=\"mini\"\n              v-if=\"hasPermission('executeplan:delete') && scope.row.id !== id\"\n              @click.native.prevent=\"removeexecuteplanparam(scope.$index)\"\n            >删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-dialog>\n\n    <el-dialog :title=\"paramstextMap[ParamsdialogStatus]\" :visible.sync=\"modifyparamdialogFormVisible\">\n      <el-form\n        status-icon\n        class=\"small-space\"\n        label-position=\"left\"\n        label-width=\"120px\"\n        style=\"width: 600px; margin-left:30px;\"\n        :model=\"tmpparam\"\n        ref=\"tmpparam\"\n      >\n        <el-form-item label=\"全局Header:\"  prop=\"globalheadername\" required >\n          <el-select style=\"width:415px\" v-model=\"tmpparam.globalheadername\" placeholder=\"全局Header\" @change=\"notexistheaderselectChanged($event)\">\n            <div v-for=\"(globalheader, index) in globalheaderallList\" :key=\"index\">\n              <el-option :label=\"globalheader.globalheadername\" :value=\"globalheader.globalheadername\" />\n            </div>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"modifyparamdialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"ParamsdialogStatus === 'add'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"addparams\"\n        >添加</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"ParamsdialogStatus === 'update'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"updatparam\"\n        >修改</el-button>\n      </div>\n    </el-dialog>\n\n\n  </div>\n</template>\n<script>\n  import {\n    getapicasesList as getapicasesList,\n    search as getapicases\n  } from '@/api/assets/apicases'\n  import { search as getapiList } from '@/api/deployunit/api'\n  import { getdepunitList as getdepunitList } from '@/api/deployunit/depunit'\n  import { addexecuteplanbatch as addexecuteplanbatch } from '@/api/executecenter/executeplanbatch'\n  import { searchcases as searchtestplancases, addexecuteplantestcase, removeexecuteplantestcase } from '@/api/executecenter/executeplantestcase'\n  import { checkplancondition as checkplancondition, search, addexecuteplan, updateexecuteplan, removeexecuteplan, executeplan, updateexecuteplanstatus } from '@/api/executecenter/executeplan'\n  import { unix2CurrentTime } from '@/utils'\n  import { getenviromentallList as getenviromentallList } from '@/api/enviroment/testenviroment'\n  import { getdatabydiccodeList as getdatabydiccodeList } from '@/api/system/dictionary'\n  import { getglobalheaderallList } from '@/api/testvariables/globalheader'\n  import { mapGetters } from 'vuex'\n  import { addapicasesdebug, removeapicasesdebug, updateapicasesdebug, searchheaderbyepid } from '@/api/assets/globalheaderuse'\n  export default {\n    filters: {\n      statusFilter(status) {\n        const statusMap = {\n          published: 'success',\n          draft: 'gray',\n          deleted: 'danger'\n        }\n        return statusMap[status]\n      }\n    },\n    data() {\n      return {\n        datevisible: false,\n        timevisible: false,\n        itemplanKey: null,\n        itemcaseKey: null,\n        planbusinessdiclist: [], // 执行计划字典表业务类型列表\n        tmpexecuteplanname: '',\n        tmpcasedeployunitname: null,\n        tmpcaseapiname: null,\n        tmpcaseexecuteplanid: null,\n        tmpcasecasetype: null,\n        show: false,\n        PerformanceVisible: false, // 显示性能运行模式\n        enviromentnameList: [], // 环境列表\n        apiList: [], // api列表\n        deployunitList: [], // 发布单元列表\n        multipleSelection: [], // 执行计划表格被选中的内容\n        casemultipleSelection: [], // 用例表格被选中的内容\n        globalheaderallList: [], // 全局header列表\n        executeplanList: [], // 执行计划列表\n        testcaseList: [], // 用例列表\n        testcaselastList: [], // 经过用例列表和已装载的用例组合出的结果列表\n        executeplancaseList: [], // 执行计划装载用例列表\n        executeplancaseexistList: [], // 查询执行计划已存在的用例列表\n        executeplancaseremovetList: [], // 查询执行计划需要删除存在的用例列表\n        executeplanstopList: [], // 停止执行计划列表\n        tmpplanbatchList: [], // 计划批次列表\n        paramsList: [], // 参数列表\n        listLoading: false, // 数据加载等待动画\n        caselistLoading: false, // 用例列表页面数据加载等待动画\n        total: 0, // 数据总数\n        casetotal: 0, // 用例数据总数\n        apiQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          deployunitname: '' // 获取字典表入参\n        },\n        listQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          listLoading: true,\n          executeplanname: ''\n        },\n        caselistQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          listLoading: true,\n          deployunitname: null,\n          apiname: null,\n          executeplanid: null,\n          casetype: null\n        },\n        dialogStatus: 'add',\n        dialogFormVisible: false,\n        casedialogFormVisible: false,\n        batchdialogFormVisible: false,\n        CollectionParamsFormVisible: false,\n        modifyparamdialogFormVisible: false,\n        loadcase: '装载用例',\n        loadbatch: '执行计划',\n        textMap: {\n          updateRole: '修改测试集合',\n          update: '修改测试集合',\n          add: '添加测试集合'\n        },\n        paramstextMap: {\n          updateRole: '修改参数',\n          update: '修改参数',\n          add: '添加参数'\n        },\n        diclevelQuery: {\n          page: 1, // 页码\n          size: 100, // 每页数量\n          diccode: 'planbusinesstype' // 获取字典表入参\n        },\n        btnLoading: false, // 按钮等待动画\n        casebtnLoading: false, // 按钮等待动画\n        execbtnLoading: false, // 按钮等待动画\n        tmpexecuteplan: {\n          id: '',\n          executeplanname: '',\n          enviromentname: '',\n          envid: '',\n          status: '',\n          usetype: '',\n          businesstype: '',\n          ip: '',\n          memo: '',\n          creator: '',\n          dingdingtoken: '',\n          runmode: ''\n        },\n        tmpplanbatch: {\n          executeplanid: '',\n          executeplanname: '',\n          batchname: '',\n          creator: '',\n          exectype: '',\n          exectmpdate: '',\n          execdate: '',\n          exectime: ''\n        },\n        tmpplanenv: {\n          id: '',\n          envid: '',\n          enviromentname: ''\n        },\n        tmpapicases: {\n          id: '',\n          casename: '',\n          deployunitname: '',\n          apiname: '',\n          casejmxname: '',\n          casecontent: '',\n          expect: '',\n          level: '',\n          memo: '',\n          creator: 'admin'\n        },\n        tmpparam: {\n          id: '',\n          executeplanid: '',\n          paramstype: '',\n          keyname: '',\n          keyvalue: '',\n          globalheadername: '',\n          globalheaderid: 0\n        },\n        tmpep: {\n          executeplanid: ''\n        },\n        search: {\n          page: 1,\n          size: 10,\n          executeplanname: null,\n          businesstype: ''\n        },\n        searchcase: {\n          page: 1,\n          size: 10,\n          deployunitname: null,\n          apiname: null,\n          executeplanid: null,\n          casetype: null\n        },\n        searchparam: {\n          page: 1,\n          size: 10\n        }\n      }\n    },\n\n    computed: {\n      ...mapGetters(['name', 'sidebar', 'avatar'])\n    },\n\n    created() {\n      this.getexecuteplanList()\n      this.getapiList()\n      this.getdepunitList()\n      this.getenviromentallList()\n      this.getdatabydiccodeList()\n      this.getglobalheaderallList()\n    },\n\n    methods: {\n      /**\n       * 获取组件名字典列表\n       */\n      getdatabydiccodeList() {\n        getdatabydiccodeList(this.diclevelQuery).then(response => {\n          this.planbusinessdiclist = response.data.list\n        }).catch(res => {\n          this.$message.error('加载组件名字典列表失败')\n        })\n      },\n\n      unix2CurrentTime,\n\n      getglobalheaderallList() {\n        getglobalheaderallList().then(response => {\n          this.globalheaderallList = response.data.list\n        }).catch(res => {\n          this.$message.error('加载全局Header列表失败')\n        })\n      },\n\n      /**\n       * 获取header列表\n       */\n      searchheaderbyepid() {\n        console.log(this.tmpep)\n        searchheaderbyepid(this.tmpep).then(response => {\n          this.paramsList = response.data.list\n        }).catch(res => {\n          this.$message.error('加载header列表失败')\n        })\n      },\n      /**\n       * 停止执行计划\n       */\n      stopexecuteplanList() {\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          if (this.multipleSelection[i].status === 'waiting' || this.multipleSelection[i].status === 'new' || this.multipleSelection[i].status === 'finish' || this.multipleSelection[i].status === 'stop') {\n            this.multipleSelection.splice(i)\n          }\n        }\n        if (this.multipleSelection.length === 0) {\n          this.$message.error('未选择执行计划,或者只有运行中才可以停止')\n        } else {\n          for (let i = 0; i < this.multipleSelection.length; i++) {\n            this.executeplanstopList.push({\n              'id': this.multipleSelection[i].id,\n              'status': 'stop'\n            })\n          }\n          updateexecuteplanstatus(this.executeplanstopList).then(() => {\n            this.$message.success('已停止执行计划')\n            this.btnLoading = false\n          }).catch(res => {\n            this.$message.error('停止计划执行失败')\n            this.btnLoading = false\n          })\n        }\n        this.getexecuteplanList()\n      },\n      /**\n       * 添加执行计划批次\n       */\n      savebatchandexecuteplancase() {\n        this.$refs.tmpplanbatch.validate(valid => {\n          if (valid) {\n            if (this.multipleSelection.length === 0) {\n              this.$message.error('未选择执行计划,或者所选计划已经在执行中')\n              return\n            }\n            if (this.multipleSelection.length > 1) {\n              this.$message.error('不支持多执行计划一起提交，单个提交')\n              return\n            }\n            this.tmpplanbatch.executeplanname = this.multipleSelection[0].executeplanname\n            this.tmpplanbatch.execdate = this.tmpplanbatch.exectmpdate + ' ' + this.tmpplanbatch.exectime + ':00'\n            if (this.tmpplanbatch.execdate === ':00') {\n              this.tmpplanbatch.execdate = '/'\n            }\n            if (this.tmpplanbatch.exectmpdate === '') {\n              this.tmpplanbatch.execdate = this.tmpplanbatch.exectime + ':00'\n            }\n            addexecuteplanbatch(this.tmpplanbatch).then(() => {\n              this.executeplancase()\n              this.batchdialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('计划执行失败')\n            })\n          }\n        })\n      },\n      /**\n       * 添加执行计划批次并且执行计划用例\n       */\n      // savebatchandexecuteplancase() {\n      // this.addexecuteplanbatch()\n      // this.executeplancase()\n      // this.batchdialogFormVisible = false\n      // },\n      /**\n       * 执行执行计划\n       */\n      executeplancase() {\n        this.tmpplanbatchList = []\n        this.$refs.tmpplanbatch.validate(valid => {\n          if (valid) {\n            for (let i = 0; i < this.multipleSelection.length; i++) {\n              if (this.multipleSelection[i].status === 'running') {\n                this.multipleSelection.splice(i)\n              }\n            }\n            if (this.multipleSelection.length === 0) {\n              this.$message.error('未选择执行计划,或者所选计划已经在执行中')\n            } else {\n              if (this.multipleSelection.length > 1) {\n                this.$message.error('不支持多执行计划一起提交，单个提交')\n              } else {\n                for (let i = 0; i < this.multipleSelection.length; i++) {\n                  this.tmpplanbatchList.push({\n                    'planid': this.multipleSelection[0].id,\n                    'batchname': this.tmpplanbatch.batchname\n                  })\n                }\n                executeplan(this.tmpplanbatchList).then(() => {\n                  this.$message.success('测试集合已经提交，即将开始执行')\n                }).catch(res => {\n                  this.$message.error('计划失败')\n                })\n              }\n            }\n            this.getexecuteplanList()\n          }\n        })\n      },\n\n      handleClickTableRow(row, event, column) {\n        // console.log(row)\n        // console.log(column)\n        // this.$refs.fileTable.toggleRowSelection(row)\n      },\n      handleSelectionChange(rows) {\n        // console.log(rows)\n        this.multipleSelection = rows\n        console.log('00000000000000000000000000')\n        console.log(this.multipleSelection)\n      },\n      casehandleClickTableRow(row, event, column) {\n        console.log(row)\n      },\n\n      casehandleSelectionChange(rows) {\n        this.casemultipleSelection = rows\n        // console.log(this.casemultipleSelection)\n      },\n\n      exectypeselectChanged(e) {\n        if (e === '立即执行') {\n          this.datevisible = false\n          this.timevisible = false\n        }\n        if (e === '某天定时') {\n          this.datevisible = true\n          this.timevisible = true\n          this.tmpplanbatch.execdate = ''\n          this.tmpplanbatch.exectime = ''\n        }\n        if (e === '每天定时') {\n          this.datevisible = false\n          this.timevisible = true\n          this.tmpplanbatch.exectime = ''\n        }\n      },\n      /**\n       * 参数胡类型选择  e的值为options的选值\n       */\n      paramstypeselectChanged(e) {\n        this.tmpparam.keyname = ''\n        this.tmpparam.keyvalue = ''\n      },\n      /**\n       * 获取执行计划列表\n       */\n      getexecuteplanList() {\n        this.search.execplanname = this.tmpexecplanname\n        this.search.batchname = this.tmpbatchname\n        this.listLoading = true\n        search(this.search).then(response => {\n          this.executeplanList = response.data.list\n          this.total = response.data.total\n          this.listLoading = false\n        }).catch(res => {\n          this.$message.error('加载字典列表失败')\n        })\n      },\n\n      searchBy() {\n        this.search.page = 1\n        this.listLoading = true\n        search(this.search).then(response => {\n          this.itemKey = Math.random()\n          this.executeplanList = response.data.list\n          this.total = response.data.total\n        }).catch(res => {\n          this.$message.error('搜索失败')\n        })\n        this.tmpexecuteplanname = this.search.executeplanname\n        this.listLoading = false\n        this.btnLoading = false\n      },\n\n      /**\n       * 改变每页数量\n       * @param size 页大小\n       */\n      handleSizeChange(size) {\n        this.search.page = 1\n        this.search.size = size\n        this.getexecuteplanList()\n      },\n      /**\n       * 改变页码\n       * @param page 页号\n       */\n      handleCurrentChange(page) {\n        this.search.page = page\n        this.getexecuteplanList()\n      },\n      /**\n       * 表格序号\n       * 可参考自定义表格序号\n       * http://element-cn.eleme.io/#/zh-CN/component/table#zi-ding-yi-suo-yin\n       * @param index 数据下标\n       * @returns 表格序号\n       */\n      getIndex(index) {\n        return (this.search.page - 1) * this.search.size + index + 1\n      },\n\n      paramgetIndex(index) {\n        return (this.searchparam.page - 1) * this.searchparam.size + index + 1\n      },\n\n      /**\n       * 环境下拉框活的环境id\n       */\n      enviromentselectChanged(e) {\n        for (let i = 0; i < this.enviromentnameList.length; i++) {\n          if (this.enviromentnameList[i].enviromentname === e) {\n            this.tmpexecuteplan.envid = this.enviromentnameList[i].id\n          }\n          console.log(this.enviromentnameList[i].id)\n        }\n      },\n      /**\n       * 发布单元下拉选择事件获取发布单元id  e的值为options的选值\n       */\n      selectChanged(e) {\n        this.apiList = null\n        this.apiQuery.deployunitname = e\n        getapiList(this.apiQuery).then(response => {\n          this.apiList = response.data.list\n          // console.log(this.apiList)\n          // this.casetotal = response.data.total\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n      /**\n       * 获取api列表\n       */\n      getapiList() {\n        this.caselistLoading = true\n        getapiList(this.listQuery).then(response => {\n          this.apiList = response.data.list\n          // this.casetotal = response.data.total\n          this.caselistLoading = false\n        }).catch(res => {\n          this.$message.error('加载api列表失败')\n        })\n      },\n\n      /**\n       * 获取环境列表\n       */\n      getenviromentallList() {\n        getenviromentallList().then(response => {\n          this.enviromentnameList = response.data\n        }).catch(res => {\n          this.$message.error('加载环境列表失败')\n        })\n      },\n\n      /**\n       * 获取发布单元列表\n       */\n      getdepunitList() {\n        this.caselistLoading = true\n        getdepunitList(this.listQuery).then(response => {\n          this.deployunitList = response.data.list\n          // this.casetotal = response.data.total\n          // this.caselistLoading = false\n        }).catch(res => {\n          this.$message.error('加载发布单元列表失败')\n        })\n      },\n\n      /**\n       * 获取用例列表\n       */\n      getcaseList() {\n        this.caselistLoading = true\n        getapicasesList(this.listQuery).then(response => {\n          this.apicasesList = response.data.list\n          // this.casetotal = response.data.total\n          this.caselistLoading = false\n        }).catch(res => {\n          this.$message.error('加载用例列表失败')\n        })\n      },\n\n      /**\n       * 获取发布单元和api的用例\n       */\n      searchcaseBy() {\n        this.searchtestplanexistcase()\n      },\n\n      // 已废弃\n      async gettestcaselastList() {\n        console.log(this.testcaseList.length)\n        console.log(this.executeplancaseexistList.length)\n        for (let i = 0; i < this.testcaseList.length; i++) {\n          for (let j = 0; j < this.executeplancaseexistList.length; j++) {\n            if (this.testcaseList[i].id === this.executeplancaseexistList[j].testcaseid) {\n              this.testcaselastList.push({\n                'checkstats': true,\n                'deployunitname': this.testcaseList[i].deployunitname,\n                'apiname': this.testcaseList[i].apiname,\n                'casename': this.testcaseList[i].casename,\n                'expect': this.testcaseList[i].expect\n              })\n            } else {\n              this.testcaselastList.push({\n                'checkstats': false,\n                'deployunitname': this.testcaseList[i].deployunitname,\n                'apiname': this.testcaseList[i].apiname,\n                'casename': this.testcaseList[i].casename,\n                'expect': this.testcaseList[i].expect\n              })\n            }\n          }\n        }\n        console.log(this.testcaselastList)\n      },\n\n      /**\n       * 获取发布单元和api的用例，已废弃\n       */\n      async searchcaseBydepandapi() {\n        this.$refs.searchcase.validate(valid => {\n          if (valid) {\n            this.casebtnLoading = true\n            this.caselistLoading = true\n            this.searchcase.page = this.caselistQuery.page\n            this.searchcase.size = this.caselistQuery.size\n            getapicases(this.searchcase).then(response => {\n              this.testcaseList = response.data.list\n              console.log(this.testcaseList.length)\n              this.casetotal = response.data.total\n            }).catch(res => {\n              this.$message.error('搜索失败')\n            })\n            this.caselistLoading = false\n            this.casebtnLoading = false\n          }\n        })\n      },\n\n      /**\n       * 获取执行计划下发布单元和api已的用例,如果是已装载过的，会带上装载状态\n       */\n      searchtestplanexistcase() {\n        this.testcaselastList = []\n        this.$refs.searchcase.validate(valid => {\n          if (valid) {\n            this.searchcase.executeplanid = this.tmpexecuteplan.id\n            this.searchcase.casetype = this.tmpexecuteplan.usetype\n            // this.searchcase.page = this.caselistQuery.page\n            // this.searchcase.size = this.caselistQuery.size\n            this.searchcase.page = 1\n            searchtestplancases(this.searchcase).then(response => {\n              this.testcaselastList = response.data.list\n              this.casetotal = response.data.total\n              this.$nextTick(() => {\n                for (let i = 0; i < this.testcaselastList.length; i++) {\n                  if (this.testcaselastList[i].status === true) {\n                    this.$refs.caseTable.toggleRowSelection(this.testcaselastList[i], true)\n                  }\n                }\n              })\n            }).catch(res => {\n              this.$message.error('获取已装载的用例失败')\n            })\n          }\n        })\n        this.tmpcasedeployunitname = this.searchcase.deployunitname\n        this.tmpcaseapiname = this.searchcase.apiname\n        this.tmpcaseexecuteplanid = this.searchcase.executeplanid\n        this.tmpcasecasetype = this.searchcase.casetype\n      },\n\n      /**\n       * 改变每页数量\n       * @param size 页大小\n       */\n      casehandleSizeChange(size) {\n        this.searchcase.page = 1\n        this.searchcase.size = size\n        this.searchtestplanexistcase()\n      },\n      /**\n       * 改变页码\n       * @param page 页号\n       */\n      casehandleCurrentChange(page) {\n        this.searchcase.page = page\n        this.searchtestplanexistcase()\n      },\n      /**\n       * 表格序号\n       * 可参考自定义表格序号\n       * http://element-cn.eleme.io/#/zh-CN/component/table#zi-ding-yi-suo-yin\n       * @param index 数据下标\n       * @returns 表格序号\n       */\n      casegetIndex(index) {\n        return (this.searchcase.page - 1) * this.searchcase.size + index + 1\n      },\n      /**\n       * 显示添加执行计划对话框\n       */\n      showAddexecuteplanDialog() {\n        // 显示新增对话框\n        this.dialogFormVisible = true\n        this.dialogStatus = 'add'\n        this.tmpexecuteplan.id = ''\n        this.tmpexecuteplan.executeplanname = ''\n        this.tmpexecuteplan.status = 'new'\n        this.tmpexecuteplan.memo = ''\n        this.tmpexecuteplan.usetype = ''\n        this.tmpexecuteplan.enviromentname = ''\n        this.tmpexecuteplan.businesstype = ''\n        this.tmpexecuteplan.creator = this.name\n        this.tmpexecuteplan.runmode = ''\n        this.tmpexecuteplan.dingdingtoken = ''\n      },\n\n      showplanparamsDialog(index) {\n        // 显示新增对话框\n        this.CollectionParamsFormVisible = true\n        this.tmpparam.executeplanid = this.executeplanList[index].id\n        this.tmpep.executeplanid = this.executeplanList[index].id\n        this.searchheaderbyepid()\n      },\n\n      // 显示新增对话框\n      showAddapiparamsDialog() {\n        this.modifyparamdialogFormVisible = true\n        this.ParamsdialogStatus = 'add'\n        this.tmpparam.id = ''\n        this.tmpparam.globalheaderid = ''\n        this.tmpparam.globalheadername = ''\n      },\n\n      showUpdateparamsDialog(index) {\n        this.modifyparamdialogFormVisible = true\n        this.ParamsdialogStatus = 'update'\n        this.tmpparam.id = this.paramsList[index].id\n        this.tmpparam.globalheadername = this.paramsList[index].globalheadername\n      },\n      /**\n       * 显示添加执行计划批次对话框\n       */\n      showplanbatchDialog() {\n        this.tmpplanbatch.exectmpdate = ''\n        this.tmpplanbatch.exectime = ''\n        this.tmpplanbatch.execdate = ''\n        this.tmpplanbatch.exectype = ''\n        this.timevisible = false\n        this.datevisible = false\n        // 显示新增对话框\n        for (let i = 0; i < this.multipleSelection.length; i++) {\n          if (this.multipleSelection[i].status === 'running') {\n            this.multipleSelection.splice(i)\n          }\n        }\n        if (this.multipleSelection.length === 0) {\n          this.$message.error('未选择执行计划,或者所选计划已经在执行中')\n        } else {\n          if (this.multipleSelection.length > 1) {\n            this.$message.error('不支持多执行计划一起提交，单个提交')\n          } else {\n            this.tmpplanenv.id = this.multipleSelection[0].id\n            this.tmpplanenv.envid = this.multipleSelection[0].envid\n            this.tmpplanenv.enviromentname = this.multipleSelection[0].enviromentname\n            checkplancondition(this.tmpplanenv).then(() => {\n              this.batchdialogFormVisible = true\n              this.tmpplanbatch.executeplanid = this.multipleSelection[0].id\n              this.tmpplanbatch.creator = this.name\n              this.tmpplanbatch.batchname = ''\n            }).catch(res => {\n              // this.$message.error('执行失败')\n            })\n          }\n        }\n      },\n      /**\n       * 添加执行计划\n       */\n      addexecuteplan() {\n        this.$refs.tmpexecuteplan.validate(valid => {\n          if (valid) {\n            this.btnLoading = true\n            addexecuteplan(this.tmpexecuteplan).then(() => {\n              this.$message.success('添加成功')\n              this.getexecuteplanList()\n              this.dialogFormVisible = false\n              this.btnLoading = false\n            }).catch(res => {\n              this.$message.error('添加失败')\n              this.btnLoading = false\n            })\n          }\n        })\n      },\n\n      /**\n       * 添加params\n       */\n      addparams() {\n        this.$refs.tmpparam.validate(valid => {\n          if (valid) {\n            addapicasesdebug(this.tmpparam).then(() => {\n              this.$message.success('添加成功')\n              this.modifyparamdialogFormVisible = false\n              this.searchheaderbyepid()\n            }).catch(res => {\n              this.$message.error('添加失败')\n            })\n          }\n        })\n      },\n\n      /**\n       * 更新param\n       */\n      updatparam() {\n        this.$refs.tmpparam.validate(valid => {\n          if (valid) {\n            updateapicasesdebug(this.tmpparam).then(() => {\n              this.$message.success('更新成功')\n              this.searchheaderbyepid()\n              this.modifyparamdialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('添加失败')\n            })\n          }\n        })\n      },\n\n      /**\n       * 删除param\n       * @param index api下标\n       */\n      removeexecuteplanparam(index) {\n        this.$confirm('删除该参数？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.paramsList[index].id\n          removeapicasesdebug(id).then(() => {\n            this.$message.success('删除成功')\n            this.searchheaderbyepid()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      /**\n       * 显示修改执行计划对话框\n       * @param index 执行计划下标\n       */\n      showUpdateexecuteplanDialog(index) {\n        this.dialogFormVisible = true\n        this.dialogStatus = 'update'\n        this.tmpexecuteplan.id = this.executeplanList[index].id\n        this.tmpexecuteplan.executeplanname = this.executeplanList[index].executeplanname\n        this.tmpexecuteplan.status = this.executeplanList[index].status\n        this.tmpexecuteplan.usetype = this.executeplanList[index].usetype\n        this.tmpexecuteplan.memo = this.executeplanList[index].memo\n        this.tmpexecuteplan.enviromentname = this.executeplanList[index].enviromentname\n        this.tmpexecuteplan.businesstype = this.executeplanList[index].businesstype\n        this.tmpexecuteplan.creator = this.name\n        this.tmpexecuteplan.runmode = this.executeplanList[index].runmode\n        this.tmpexecuteplan.dingdingtoken = this.executeplanList[index].dingdingtoken\n        for (let i = 0; i < this.enviromentnameList.length; i++) {\n          if (this.enviromentnameList[i].enviromentname === this.tmpexecuteplan.enviromentname) {\n            this.tmpexecuteplan.envid = this.enviromentnameList[i].id\n          }\n        }\n      },\n\n      /**\n       * 装载执行计划的用例\n       */\n      addexecuteplantestcase() {\n        this.executeplancaseList = []\n        if (this.casemultipleSelection.length === 0) {\n          this.$message.error('请选择装载的用例')\n        } else {\n          for (let i = 0; i < this.casemultipleSelection.length; i++) {\n            this.executeplancaseList.push({\n              'executeplanid': this.tmpexecuteplan.id,\n              'deployunitid': this.casemultipleSelection[i].deployunitid,\n              'apiid': this.casemultipleSelection[i].apiid,\n              'deployunitname': this.casemultipleSelection[i].deployunitname,\n              'apiname': this.casemultipleSelection[i].apiname,\n              'testcaseid': this.casemultipleSelection[i].id,\n              'casename': this.casemultipleSelection[i].casename\n            })\n          }\n          addexecuteplantestcase(this.executeplancaseList).then(() => {\n            this.$message.success('装载成功')\n          }).catch(res => {\n            this.$message.error('装载失败')\n          })\n        }\n      },\n\n      /**\n       * 删除装载的用例\n       */\n      removeexecuteplantestcase() {\n        this.executeplancaseremovetList = []\n        if (this.testcaselastList.length === this.casemultipleSelection.length) {\n          this.$message.error('未找到需要取消装载的用例')\n        } else {\n          for (let i = 0; i < this.testcaselastList.length; i++) {\n            var findflag = false\n            for (let j = 0; j < this.casemultipleSelection.length; j++) {\n              if (this.testcaselastList[i].id === this.casemultipleSelection[j].id) {\n                findflag = true\n                break\n              }\n            }\n            // 表示未选中的记录，需要删除\n            this.testcaselastList[i].id\n            if (!findflag) {\n              this.executeplancaseremovetList.push({\n                'executeplanid': this.tmpexecuteplan.id,\n                'deployunitname': this.testcaselastList[i].deployunitname,\n                'apiname': this.testcaselastList[i].apiname,\n                'testcaseid': this.testcaselastList[i].id,\n                'casename': this.testcaselastList[i].casename\n              })\n            }\n          }\n          console.log(this.executeplancaseremovetList)\n          removeexecuteplantestcase(this.executeplancaseremovetList).then(() => {\n            this.$message.success('取消装载用例成功')\n          }).catch(res => {\n            this.$message.error('取消装载用例失败')\n          })\n        }\n      },\n      /**\n       * 显示用例对话框\n       * @param index 执行计划下标\n       */\n      showTestCaseDialog(index) {\n        this.casedialogFormVisible = true\n        this.tmpexecuteplan.id = this.executeplanList[index].id\n        this.tmpexecuteplan.executeplanname = this.executeplanList[index].executeplanname\n        this.tmpexecuteplan.status = this.executeplanList[index].status\n        this.tmpexecuteplan.usetype = this.executeplanList[index].usetype\n        this.tmpexecuteplan.memo = this.executeplanList[index].memo\n        this.searchcase.deployunitname = null\n        this.searchcase.apiname = null\n        this.testcaselastList = []\n        this.casetotal = 0\n      },\n      /**\n       * 更新执行计划\n       */\n      updateexecuteplan() {\n        this.$refs.tmpexecuteplan.validate(valid => {\n          if (valid) {\n            updateexecuteplan(this.tmpexecuteplan).then(() => {\n              this.$message.success('更新成功')\n              this.getexecuteplanList()\n              this.dialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('更新失败')\n              this.btnLoading = false\n            })\n          }\n        })\n      },\n      /**\n       * 删除字典\n       * @param index 执行计划下标\n       */\n      removeexecuteplan(index) {\n        this.$confirm('删除该执行计划？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.executeplanList[index].id\n          removeexecuteplan(id).then(() => {\n            this.$message.success('删除成功')\n            this.getexecuteplanList()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      /**\n       * 执行计划资料是否唯一\n       * @param 执行计划\n       */\n      isUniqueDetail(executeplan) {\n        for (let i = 0; i < this.executeplanList.length; i++) {\n          if (this.executeplanList[i].id !== executeplan.id) { // 排除自己\n            if (this.executeplanList[i].executeplanname === executeplan.executeplanname) {\n              this.$message.error('执行计划名已存在')\n              return false\n            }\n          }\n        }\n        return true\n      },\n      notexistheaderselectChanged(e) {\n        for (let i = 0; i < this.globalheaderallList.length; i++) {\n          if (this.globalheaderallList[i].globalheadername === e) {\n            this.tmpparam.globalheaderid = this.globalheaderallList[i].id\n          }\n        }\n      }\n    }\n  }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/views/executecenter/executeplan/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\"},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[(_vm.hasPermission('executeplan:list'))?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\",\"icon\":\"el-icon-refresh\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.getexecuteplanList($event)}}},[_vm._v(\"刷新\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:list'))?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showplanbatchDialog($event)}}},[_vm._v(\"运行\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:add'))?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showAddexecuteplanDialog($event)}}},[_vm._v(\"添加测试集合\")]):_vm._e()],1),_vm._v(\" \"),(_vm.hasPermission('executeplan:search'))?_c('span',[_c('el-form-item',[_c('el-input',{attrs:{\"placeholder\":\"测试集合\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.searchBy($event)}},model:{value:(_vm.search.executeplanname),callback:function ($$v) {_vm.$set(_vm.search, \"executeplanname\", $$v)},expression:\"search.executeplanname\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-select',{attrs:{\"placeholder\":\"业务类型\"},model:{value:(_vm.search.businesstype),callback:function ($$v) {_vm.$set(_vm.search, \"businesstype\", $$v)},expression:\"search.businesstype\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.planbusinessdiclist),function(businessdicitem,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":businessdicitem.dicitmevalue,\"value\":businessdicitem.dicitmevalue}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},on:{\"click\":_vm.searchBy}},[_vm._v(\"查询\")])],1)],1):_vm._e()],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],key:_vm.itemplanKey,ref:\"fileTable\",attrs:{\"data\":_vm.executeplanList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"},on:{\"row-click\":_vm.handleClickTableRow,\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"40\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"50\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.getIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"集合名\",\"align\":\"center\",\"prop\":\"executeplanname\",\"width\":\"160\"}}),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"envid\",\"align\":\"center\",\"prop\":\"envid\",\"width\":\"50\"}}):_vm._e(),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"状态\",\"align\":\"center\",\"prop\":\"status\",\"width\":\"50\"}}):_vm._e(),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"业务类型\",\"align\":\"center\",\"prop\":\"businesstype\",\"width\":\"100\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"执行环境\",\"align\":\"center\",\"prop\":\"enviromentname\",\"width\":\"100\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"类型\",\"align\":\"center\",\"prop\":\"usetype\",\"width\":\"50\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"运行模式\",\"align\":\"center\",\"prop\":\"runmode\",\"width\":\"70\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":true,\"label\":\"通知钉钉\",\"align\":\"center\",\"prop\":\"dingdingtoken\",\"width\":\"90\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作人\",\"align\":\"center\",\"prop\":\"creator\",\"width\":\"60\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"描述\",\"align\":\"center\",\"prop\":\"memo\",\"width\":\"100\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"创建时间\",\"align\":\"center\",\"prop\":\"createTime\",\"width\":\"130\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(_vm.unix2CurrentTime(scope.row.createTime)))]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"最后修改时间\",\"align\":\"center\",\"prop\":\"lastmodifyTime\",\"width\":\"130\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(_vm.unix2CurrentTime(scope.row.lastmodifyTime))+\"\\n      \")]}}])}),_vm._v(\" \"),(_vm.hasPermission('executeplan:update')  || _vm.hasPermission('executeplan:delete'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showUpdateexecuteplanDialog(scope.$index)}}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:delete') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removeexecuteplan(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showplanparamsDialog(scope.$index)}}},[_vm._v(\"全局Header\")]):_vm._e()]}}],null,false,189242706)}):_vm._e()],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.search.page,\"page-size\":_vm.search.size,\"total\":_vm.total,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}}),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.textMap[_vm.dialogStatus],\"visible\":_vm.dialogFormVisible},on:{\"update:visible\":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',{ref:\"tmpexecuteplan\",staticClass:\"small-space\",staticStyle:{\"width\":\"400px\",\"margin-left\":\"50px\"},attrs:{\"status-icon\":\"\",\"label-position\":\"left\",\"label-width\":\"120px\",\"model\":_vm.tmpexecuteplan}},[_c('el-form-item',{attrs:{\"label\":\"集合名\",\"prop\":\"executeplanname\",\"required\":\"\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"prefix-icon\":\"el-icon-edit\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpexecuteplan.executeplanname),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"executeplanname\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"tmpexecuteplan.executeplanname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"类型\",\"prop\":\"usetype\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"类型\"},model:{value:(_vm.tmpexecuteplan.usetype),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"usetype\", $$v)},expression:\"tmpexecuteplan.usetype\"}},[_c('el-option',{attrs:{\"label\":\"功能\",\"value\":\"功能\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"性能\",\"value\":\"性能\"}})],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"执行环境\",\"prop\":\"enviromentname\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"执行环境\"},on:{\"change\":function($event){return _vm.enviromentselectChanged($event)}},model:{value:(_vm.tmpexecuteplan.enviromentname),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"enviromentname\", $$v)},expression:\"tmpexecuteplan.enviromentname\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.enviromentnameList),function(envname,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":envname.enviromentname,\"value\":envname.enviromentname,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"业务类型\",\"prop\":\"businesstype\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"业务类型\"},on:{\"change\":function($event){return _vm.businesstypeselectChanged($event)}},model:{value:(_vm.tmpexecuteplan.businesstype),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"businesstype\", $$v)},expression:\"tmpexecuteplan.businesstype\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.planbusinessdiclist),function(dicitem,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":dicitem.dicitmevalue,\"value\":dicitem.dicitmevalue,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"运行模式\",\"prop\":\"runmode\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"运行模式\"},model:{value:(_vm.tmpexecuteplan.runmode),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"runmode\", $$v)},expression:\"tmpexecuteplan.runmode\"}},[_c('el-option',{attrs:{\"label\":\"单机运行\",\"value\":\"单机运行\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"多机并行\",\"value\":\"多机并行\"}})],1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"钉钉通知token\",\"prop\":\"dingdingtoken\"}},[_c('el-input',{attrs:{\"maxlength\":\"200\",\"type\":\"text\",\"prefix-icon\":\"el-icon-message\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpexecuteplan.dingdingtoken),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"dingdingtoken\", $$v)},expression:\"tmpexecuteplan.dingdingtoken\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"备注\",\"prop\":\"memo\"}},[_c('el-input',{attrs:{\"maxlength\":\"200\",\"type\":\"text\",\"prefix-icon\":\"el-icon-message\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpexecuteplan.memo),callback:function ($$v) {_vm.$set(_vm.tmpexecuteplan, \"memo\", $$v)},expression:\"tmpexecuteplan.memo\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.dialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),(_vm.dialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addexecuteplan($event)}}},[_vm._v(\"保存\\n      \")]):_vm._e(),_vm._v(\" \"),(_vm.dialogStatus === 'update')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updateexecuteplan($event)}}},[_vm._v(\"修改\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.loadcase,\"visible\":_vm.casedialogFormVisible},on:{\"update:visible\":function($event){_vm.casedialogFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{ref:\"searchcase\",attrs:{\"inline\":true,\"model\":_vm.searchcase}},[(_vm.hasPermission('apicases:search'))?_c('span',[_c('el-form-item',{attrs:{\"label\":\"发布单元:\",\"prop\":\"deployunitname\",\"required\":\"\"}},[_c('el-select',{attrs:{\"placeholder\":\"发布单元\"},on:{\"change\":function($event){return _vm.selectChanged($event)}},model:{value:(_vm.searchcase.deployunitname),callback:function ($$v) {_vm.$set(_vm.searchcase, \"deployunitname\", $$v)},expression:\"searchcase.deployunitname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.deployunitList),function(depname,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":depname.deployunitname,\"value\":depname.deployunitname,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"API:\"}},[_c('el-select',{attrs:{\"placeholder\":\"api名\"},model:{value:(_vm.searchcase.apiname),callback:function ($$v) {_vm.$set(_vm.searchcase, \"apiname\", $$v)},expression:\"searchcase.apiname\"}},[_c('el-option',{attrs:{\"label\":\"请选择\",\"value\":\"\"}}),_vm._v(\" \"),_vm._l((_vm.apiList),function(api,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":api.apiname,\"value\":api.apiname}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},on:{\"click\":_vm.searchcaseBy}},[_vm._v(\"查询\")])],1)],1):_vm._e()])],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],key:_vm.itemcaseKey,ref:\"caseTable\",attrs:{\"data\":_vm.testcaselastList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"},on:{\"row-click\":_vm.casehandleClickTableRow,\"selection-change\":_vm.casehandleSelectionChange}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.getIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"type\":\"selection\",\"prop\":\"status\",\"width\":\"50\"}}),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"apiid\",\"align\":\"center\",\"prop\":\"apiid\",\"width\":\"120\"}}):_vm._e(),_vm._v(\" \"),(_vm.show)?_c('el-table-column',{attrs:{\"label\":\"deployunitid\",\"align\":\"center\",\"prop\":\"deployunitid\",\"width\":\"120\"}}):_vm._e(),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"用例名\",\"align\":\"center\",\"prop\":\"casename\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"发布单元\",\"align\":\"center\",\"prop\":\"deployunitname\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"API\",\"align\":\"center\",\"prop\":\"apiname\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"期望值\",\"align\":\"center\",\"prop\":\"expect\",\"width\":\"120\"}})],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.searchcase.page,\"page-size\":_vm.searchcase.size,\"total\":_vm.casetotal,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.casehandleSizeChange,\"current-change\":_vm.casehandleCurrentChange}}),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.casedialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addexecuteplantestcase($event)}}},[_vm._v(\"装载\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"warning\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removeexecuteplantestcase($event)}}},[_vm._v(\"取消装载\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.loadbatch,\"visible\":_vm.batchdialogFormVisible},on:{\"update:visible\":function($event){_vm.batchdialogFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{ref:\"tmpplanbatch\",attrs:{\"model\":_vm.tmpplanbatch}},[_c('el-form-item',{attrs:{\"label\":\"执行计划：\",\"prop\":\"batchname\",\"required\":\"\"}},[_c('el-input',{staticStyle:{\"width\":\"60%\"},attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"placeholder\":\"例如2020-10-21-tag-101\",\"prefix-icon\":\"el-icon-edit\",\"auto-complete\":\"off\"},model:{value:(_vm.tmpplanbatch.batchname),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"batchname\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"tmpplanbatch.batchname\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"执行类型：\",\"prop\":\"exectype\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"placeholder\":\"执行类型\"},on:{\"change\":function($event){return _vm.exectypeselectChanged($event)}},model:{value:(_vm.tmpplanbatch.exectype),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"exectype\", $$v)},expression:\"tmpplanbatch.exectype\"}},[_c('el-option',{attrs:{\"label\":\"立即执行\",\"value\":\"立即执行\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"某天定时\",\"value\":\"某天定时\"}}),_vm._v(\" \"),_c('el-option',{attrs:{\"label\":\"每天定时\",\"value\":\"每天定时\"}})],1)],1),_vm._v(\" \"),(_vm.datevisible)?_c('div',[_c('el-form-item',{attrs:{\"label\":\"选择日期：\",\"prop\":\"exectmpdate\",\"required\":\"\"}},[_c('el-date-picker',{staticStyle:{\"width\":\"60%\"},attrs:{\"type\":\"date\",\"format\":\"yyyy-MM-dd\",\"value-format\":\"yyyy-MM-dd\",\"placeholder\":\"选择日期\"},model:{value:(_vm.tmpplanbatch.exectmpdate),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"exectmpdate\", $$v)},expression:\"tmpplanbatch.exectmpdate\"}})],1)],1):_vm._e(),_vm._v(\" \"),(_vm.timevisible)?_c('div',[_c('el-form-item',{attrs:{\"label\":\"选择时刻：\",\"prop\":\"exectime\",\"required\":\"\"}},[_c('el-time-select',{staticStyle:{\"width\":\"60%\"},attrs:{\"picker-options\":{\n            start: '00:05',\n            step: '00:10',\n            end: '23:55'\n          },\"placeholder\":\"选择时间\"},model:{value:(_vm.tmpplanbatch.exectime),callback:function ($$v) {_vm.$set(_vm.tmpplanbatch, \"exectime\", $$v)},expression:\"tmpplanbatch.exectime\"}})],1)],1):_vm._e()],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.batchdialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.execbtnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.savebatchandexecuteplancase($event)}}},[_vm._v(\"执行\")])],1)]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"全局Header\",\"visible\":_vm.CollectionParamsFormVisible},on:{\"update:visible\":function($event){_vm.CollectionParamsFormVisible=$event}}},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[(_vm.hasPermission('executeplan:add'))?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showAddapiparamsDialog($event)}}},[_vm._v(\"添加全局Header\")]):_vm._e()],1)],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],key:_vm.itemKey,attrs:{\"data\":_vm.paramsList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"45\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.paramgetIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"Header\",\"align\":\"center\",\"prop\":\"globalheadername\",\"width\":\"280\"}}),_vm._v(\" \"),(_vm.hasPermission('executeplan:update')  || _vm.hasPermission('executeplan:delete'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('executeplan:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"warning\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showUpdateparamsDialog(scope.$index)}}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('executeplan:delete') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removeexecuteplanparam(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e()]}}],null,false,2267587065)}):_vm._e()],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.paramstextMap[_vm.ParamsdialogStatus],\"visible\":_vm.modifyparamdialogFormVisible},on:{\"update:visible\":function($event){_vm.modifyparamdialogFormVisible=$event}}},[_c('el-form',{ref:\"tmpparam\",staticClass:\"small-space\",staticStyle:{\"width\":\"600px\",\"margin-left\":\"30px\"},attrs:{\"status-icon\":\"\",\"label-position\":\"left\",\"label-width\":\"120px\",\"model\":_vm.tmpparam}},[_c('el-form-item',{attrs:{\"label\":\"全局Header:\",\"prop\":\"globalheadername\",\"required\":\"\"}},[_c('el-select',{staticStyle:{\"width\":\"415px\"},attrs:{\"placeholder\":\"全局Header\"},on:{\"change\":function($event){return _vm.notexistheaderselectChanged($event)}},model:{value:(_vm.tmpparam.globalheadername),callback:function ($$v) {_vm.$set(_vm.tmpparam, \"globalheadername\", $$v)},expression:\"tmpparam.globalheadername\"}},_vm._l((_vm.globalheaderallList),function(globalheader,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":globalheader.globalheadername,\"value\":globalheader.globalheadername}})],1)}),0)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.modifyparamdialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),(_vm.ParamsdialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.addparams($event)}}},[_vm._v(\"添加\")]):_vm._e(),_vm._v(\" \"),(_vm.ParamsdialogStatus === 'update')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updatparam($event)}}},[_vm._v(\"修改\")]):_vm._e()],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7ff267b1\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/executecenter/executeplan/index.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7ff267b1\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/executecenter/executeplan/index.vue\n// module id = null\n// module chunks = ","import request from '@/utils/request'\n\nexport function getapicasesdebugList(params) {\n  return request({\n    url: 'globalheaderuse/',\n    method: 'get',\n    params\n  })\n}\n\nexport function searchheaderbyepid(params) {\n  return request({\n    url: '/globalheaderuse/searchheaderbyepid',\n    method: 'post',\n    data: params\n  })\n}\n\nexport function getapicasesdebugnum() {\n  return request({\n    url: 'globalheaderuse//getapicasesdebugnum',\n    method: 'get'\n  })\n}\n\nexport function getapicasesdebugallList() {\n  return request({\n    url: 'globalheaderuse//ens',\n    method: 'get'\n  })\n}\n\nexport function searchheadernotexist(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/searchnotexit',\n    method: 'post',\n    data: apicasesdebugForm\n  })\n}\n\nexport function searchheaderexist(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/searchexit',\n    method: 'post',\n    data: apicasesdebugForm\n  })\n}\n\nexport function addheadercasesdebug(apicases) {\n  return request({\n    url: 'globalheaderuse/addcases',\n    method: 'post',\n    data: apicases\n  })\n}\n\nexport function deleteheadercase(apicases) {\n  return request({\n    url: 'globalheaderuse/deletacases',\n    method: 'post',\n    data: apicases\n  })\n}\n\nexport function addapicasesdebug(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/',\n    method: 'post',\n    data: apicasesdebugForm\n  })\n}\n\nexport function updateapicasesdebug(apicasesdebugForm) {\n  return request({\n    url: 'globalheaderuse/detail',\n    method: 'put',\n    data: apicasesdebugForm\n  })\n}\n\nexport function removeapicasesdebug(apicasesdebugId) {\n  return request({\n    url: 'globalheaderuse/' + apicasesdebugId,\n    method: 'delete'\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/assets/globalheaderuse.js"],"sourceRoot":""}